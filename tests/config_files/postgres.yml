
communal:

  backup_root: /tmp/_rdb_postgre_test_
  backup_path: '{db_name}/{table_name}.sql'


dbms_1:
  __dbms__:
    processor: postgres

  database_1:
    __db__:
      ignore: 'session user_*'
    price:
      filter: id > 290

  database_2:
    __db__:
      ignore: 'session user_*'

# Logging
logging:

  # defaultÔºèstream format, file logging's format can define in handler
  # docs.python.org/3/library/logging.html#logrecord-attributes
  format: '%(asctime)s %(levelname)s %(message)s'      # %(process)d  [%(name)s]

  # judge whether repeatedly output to default logger, you can redefine in each logger's configure
  propagate: False

  # all parameter can redefine in each handler
  class:
    # which switches from one file to the next when the current file reaches a certain size.
    rotating_file:
      max_size: 1024*1024*50    # byte
      backup_count: 10          # reserve log file count

    # rotating the log file at certain timed intervals.
    time_rotating_file:
      when: d                   # timing unit   s:second   m:minute   h:hour   d:day    w:week
      interval: 1
      backup_count: 10          # reserve log file count

  handler:
    default:
      class: rotating_file
      path: logs/process.log    # can use absolute or relative path, the latter use set_logging's parameter root_path

  logger:
    default:                    # python module path e.g. email.mime.base
      level: debug
      handler: default stream   # stream must on the last, otherwise the output will be chaos
